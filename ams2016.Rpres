The CWOP solar radiation data archive
========================================================
author: L. Hancock, R. Chadwick
date: January 14, 2016



18th Symposium on on Meteorological Observation and Instrumentation - Session 12 - Innovative Measurements        
   
AMS New Orleans 2016 


```{r echo=FALSE, eval=FALSE}

# INTRODUCTORY REMARKS

# The raw data under discussion is linked at http://wxqa.com/lum_search.htm.
# That data is parsed then stored in an Amazon Redshift database.
# This presentation, written as an RStudio presentatin,
# draws on the Redshift database.
# Documentation on the parsing of the data and its upload to Redshift 
# is provided as Annex A at the end of the markdown.
# A data report to January 2015 is available at http://wxqa.com/solar_data_archive_fin.pdf. 
# Clones of the Redshift database can be obtained from either author.
```

basic unit of the network
======================================
```{r echo=FALSE, fig.width=24, fig.height=15}
# Install any packages below that you don't have already, and load.

# install.packages("stringr")
library (stringr)
# install.packages("insol")
library(insol)
# install.packages("marelac")
library(marelac)
# install.packages("sqldf")
library(sqldf)
# install.packages("RODBC")
 library(RODBC)
#install.packages("dplyr")
library(dplyr)
#install.packages("scales")
library(scales)
# install.packages("lubridate")
library(lubridate)
#install.packages("tidyr")
library(tidyr)
#install.packages("ggplot2")
library(ggplot2)
# install.packages("RPostgreSQL")
library(RPostgreSQL)
# install.packages ("reshape")
library(reshape)
# install.packages("broom")
library(broom)
# install.packages("rworldmap")
library(rworldmap)
# install.packages("ggmap")
library(ggmap)
library (magrittr)
library(grid)

# Link to the database and give a local name to the table.

cwop_db<-src_postgres(host='my-cluster-cwop-solar.cix687k0xvpq.us-west-2.redshift.amazonaws.com', port='5439', dbname='dev',
                      user='lohancock', password='R0samystica0')
cwoparchive <- tbl(cwop_db, "cwoparchive")
millionpoints <- tbl(cwop_db, "millionpoints")
tenmillionpoints <- tbl(cwop_db, "tenmillionpoints")


```
![EW2020](ew2020.png)

***
    
  
  EW2020>011245z 3849.62N/07647.89W_171/ 000g000t025 r000p000P000 h69b10235 L016.DsIP-V  | 
  ------------- | -------------



network dimensions
=======================================================
```{r echo=FALSE, fig.width=24, fig.height=15}

# group by archivedate, then select stationname, then choose only distinct, then count them.

n_stations<-cwoparchive %>%
  group_by (archivedate) %>%
  select(stationname) %>%
  distinct()%>%
  summarise(daily_stations=n())
n_stations<-collect(n_stations)
n_stations_df<-data.frame(n_stations)

p<-ggplot(n_stations_df,aes(archivedate,daily_stations))
p2<-p+geom_point()
p2+theme(axis.text=element_text(size=60),
        axis.title=element_text(size=10),
        plot.title=element_text(size=60))+xlab("")+ylab("")+ggtitle("number of stations")

```

```{r echo=FALSE, fig.width=24, fig.height=12}

# Make a station map
# select max(archivedate) from cwoparchive.

latest<-cwoparchive %>%
  select(archivedate) %>%
  summarise(maxdate=max(archivedate))
latest_df<-data.frame(latest)
displaydate<-latest_df$maxdate


# select distinct latitude,longitude from cwoparchive where archivedate='2015-06-06' order by latitude;

stations<-cwoparchive %>%
  filter(archivedate==displaydate) %>%
  select(latitude,longitude) %>%
  distinct()
stations<-collect(stations)
stations_df<-data.frame(stations)

# plot the map

stationmap<-getMap(resolution="low")
plot(stationmap,xlim=c(-180,180),ylim=c(-80,80),asp=1)
points(stations$longitude, stations$latitude, col = "red", pch=19, cex = 1.5)

```
***

```{r echo=FALSE, fig.width=24, fig.height=15}
# SELECT stationname, COUNT (stationname) FROM public.cwop20150120 GROUP BY stationname;
n_reports <- cwoparchive %>%
  filter(archivedate=='2015-03-31') %>%
  group_by (stationname) %>%
  summarise (daily_station_n=n())
n_reports <- collect(n_reports)
n_reports_df<-data.frame(n_reports)

preports<-ggplot(n_reports_df,aes(720/daily_station_n))
preports+geom_histogram(binwidth=1)+xlim(0,60)+xlab("Reporting interval in minutes")+ggtitle("March 31, 2015 - Those reporting once/hour or more")+ylab("Number of stations")+theme(axis.text=element_text(size=60),
        axis.title=element_text(size=10),
        plot.title=element_text(size=60))+xlab("")+ylab("")+ggtitle("distribution of reporting intervals in minutes")
```
   

```{r echo=FALSE, fig.width=24, fig.height=15}

# group by archivedate, then count them.

n_obs<-cwoparchive %>%
  group_by (archivedate) %>%
  summarise(daily_obs=n())
n_obs<-collect(n_obs)
n_obs_df<-data.frame(n_obs)

pp<-ggplot(n_obs_df,aes(archivedate,daily_obs))
pp2<-pp+geom_point()
pp2+theme(axis.text=element_text(size=60),
        axis.title=element_text(size=10),
        plot.title=element_text(size=60))+xlab("")+ylab("")+ggtitle("number of reports each day")

```



the archive of parsed data
====================================================
```{r echo=FALSE}

latest<-cwoparchive %>%
  select(archivedate) %>%
  summarise(maxdate=max(archivedate))
latest_df<-data.frame(latest)
displaydate<-latest_df$maxdate

````
  
**On `r paste(displaydate)` the total number of observations in the archive:**

```{r echo=FALSE}

latest<-cwoparchive %>%
  summarise(totaln=n()) %>%
  collect() %>%
  data.frame ()
total_n<-latest$totaln

````

*`r paste(comma_format()(total_n))`*

**The number of stations that have ever reported:**
```{r echo=FALSE}

nstations <-cwoparchive %>%
  summarise(a=n_distinct(stationname)) %>%
  collect() %>%
  data.frame()
totalstatns <- nstations$a
```
*`r paste(comma_format()(totalstatns))`*


**The number of station-days:**
```{r echo=FALSE}

nstationdays <-cwoparchive %>%  
  select(stationname,archivedate) %>%
  distinct() %>%
  summarise(count=n()) %>%
  collect() %>% 
  data.frame ()
totstatndays<- nstationdays$count
```
*`r paste(comma_format()(totstatndays))`*




clear sky model added to archive 
============================================
```{r echo=FALSE}
  station <- "SRCTBL"  
  thisdataday_df<-cwoparchive %>%
    filter(stationname==station,archivedate > '2015-06-07', archivedate < '2015-06-15') %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) %>% 
    collect() %>%
    data.frame()
  p<-ggplot(thisdataday_df,aes(z,linterpreted))
  lmodel<-geom_point(aes(y=insol90),colour="yellow")
  lobs<-geom_point(colour="blue")
  plabs<-labs(x="Date", y="L in W per m2")
  p+lmodel+lobs+ ggtitle(station)+plabs+xlab("2015")+ylab("")+ylim(0,1250)

```


***    
```{r echo=FALSE}
  station <- "SRCTBL"  
  thisdata_df<-cwoparchive %>%
    filter(stationname==station) %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) %>%
    collect() %>%
    data.frame()
  p<-ggplot(thisdata_df,aes(z,linterpreted))
  lmodel<-geom_point(aes(y=insol90),colour="yellow",size=1,alpha=1/40)
  lobs<-geom_point(colour="blue",size=1,alpha=1/40)
  plabs<-labs(x="", y="L in W per m2")
  p+lmodel+lobs+ plabs+ylim(0,1500)+ggtitle(station) +ylim(0,1250) 

```

archived time series with data and model
=====================================
```{r echo=FALSE, fig.width=24, fig.height=15}
  station <- "OH6GKW"  
  viewstation<-cwoparchive %>%
    filter(stationname==station) %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) 
  thisdata<-collect(viewstation)
  thisdata_df<-data.frame(thisdata)
  p<-ggplot(thisdata,aes(z,linterpreted))
  lmodel<-geom_point(aes(y=insol90),size=1,colour="yellow",alpha=1/2)
  lobs<-geom_point(size=1,colour="blue",alpha=1/2)
  plabs<-labs(x="Date", y="L in W per m2")
  p+lmodel+lobs+ ggtitle(station) +plabs+theme(axis.text=element_text(size=60),
        axis.title=element_text(size=10))+ylim(0,1500)

```
```{r echo=FALSE, fig.width=24, fig.height=15}
  station <- "DW3740"  
  thisdata<-cwoparchive %>%
    filter(stationname==station) %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) %>%
    collect () %>%
    data.frame()
  p<-ggplot(thisdata,aes(z,linterpreted))
  lmodel<-geom_point(aes(y=insol90),size=1,colour="yellow",alpha=1/2)
  lobs<-geom_point(size=1,colour="blue",alpha=1/2)
  plabs<-labs(x="Date", y="L in W per m2")
  p+lmodel+lobs+ ggtitle(station) +plabs+theme(axis.text=element_text(size=60),
        axis.title=element_text(size=10))+ylim(0,1500)

```
***
```{r echo=FALSE, fig.width=24, fig.height=15}
  station <- "ZL1TQN"  
  thisdata<-cwoparchive %>%
    filter(stationname==station) %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) %>%
    collect () %>%
    data.frame()
  p<-ggplot(thisdata,aes(z,linterpreted))
  lmodel<-geom_point(aes(y=insol90),size=1,colour="yellow",alpha=1/2)
  lobs<-geom_point(size=1,colour="blue",alpha=1/2)
  plabs<-labs(x="Date", y="L in W per m2")
  p+lmodel+lobs+ ggtitle(station) +plabs+theme(axis.text=element_text(size=60),
        axis.title=element_text(size=10))+ylim(0,1500)

```
```{r echo=FALSE, fig.width=24, fig.height=15}
  station <- "FSUMET"  
  thisdata<-cwoparchive %>%
    filter(stationname==station) %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) %>%
    collect () %>%
    data.frame()
  p<-ggplot(thisdata,aes(z,linterpreted))
  lmodel<-geom_point(aes(y=insol90),size=1,colour="yellow",alpha=1/2)
  lobs<-geom_point(size=1,colour="blue",alpha=1/2)
  plabs<-labs(x="Date", y="L in W per m2")
  p+lmodel+lobs+ ggtitle(station) +plabs+theme(axis.text=element_text(size=60),
        axis.title=element_text(size=10))+ylim(0,1500)

```


attenuation added to archive
============================================
```{r echo=FALSE}
  station <- "SRCTBL"  
  thisdataday_df<-cwoparchive %>%
    filter(stationname==station,archivedate > '2015-06-07', archivedate < '2015-06-15') %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) %>% 
    collect() %>%
    data.frame()
  p<-ggplot(thisdataday_df,aes(z,linterpreted))
  lmodel<-geom_point(aes(y=insol90),colour="yellow")
  lobs<-geom_point(colour="blue")
  plabs<-labs(x="Date", y="L in W per m2")
  p+lmodel+lobs+ ggtitle("SRCTBL data") +plabs+xlab("2015")+ylab("")+ylim(0,1250)

```

   
***    
```{r echo=FALSE}
  station <- "SRCTBL"  
  thisdataday_df<-cwoparchive %>%
    filter(stationname==station,archivedate > '2015-01-07', archivedate < '2015-01-15',sunzenithangle<90.) %>%
    select(z,linterpreted,insol90,sunzenithangle,tau90) %>% 
    collect() %>%
    data.frame()
  p<-ggplot(thisdataday_df,aes(z,tau90))
  lobs<-geom_point(colour="red")
  plabs<-labs(x="2016", y="Attenuation")
  p+lobs+ ggtitle("SRCTBL attenuation")+plabs
```  


  $\mathsf {\tau \equiv -ln\left(\frac{L_{obs}}{L_{modeled}}\right)}$
  


attenuation used as site shading assessment
=======================================
```{r echo=FALSE, fig.width=24, fig.height=15}
  station<-"CW4859"
  station_df <-cwoparchive %>%
  filter(stationname==station,sunzenithangle<85.,insol90<1000) %>%
  select(z,linterpreted,insol90,sunzenithangle,sunazimuthangle,tau90,occultingeqr) %>%
  collect() %>%
  data.frame ()
  p<-ggplot(station_df,aes(y=90-sunzenithangle,x=sunazimuthangle))
  q<-p+geom_point(aes(colour=tau90),size=3,alpha=1/8)+ylim(0,90)+ggtitle(station)+scale_colour_gradient(limits=c(0,4), low="white", high="black", space="Lab")
  q

```

   

```{r echo=FALSE, fig.width=24, fig.height=15}
  station<-"CW4859"
  station_df <-cwoparchive %>%
  filter(stationname==station,sunzenithangle<85.,insol90<1000) %>%
  select(z,linterpreted,insol90,sunzenithangle,sunazimuthangle,tau90,occultingeqr) %>%
  collect() %>%
  data.frame ()
#  p<-ggplot(station_df,aes(tau90))
#  p+geom_histogram(binwidth=.01)+ggtitle(station)+xlim(-1,5)
  azsector <- round_any (station_df$sunazimuthangle/45,1,floor)
  azsector <- (-1)*azsector
  station_df <- mutate (station_df, azsector)
  psky<-ggplot(station_df,aes(sunazimuthangle,90-sunzenithangle))
  psky+geom_point(aes(colour=azsector),size=2)+ylim(0,90)

```


***   
![cwphila](CW4859 small.png)

   
```{r echo=FALSE, fig.width=24, fig.height=15}
  
p<-ggplot(station_df,aes(tau90))
q <- p+geom_histogram(binwidth=.01)+ggtitle(station)+xlim(-1,5)
q+facet_grid(~ azsector)

  
```  

four skies from the archive
================
```{r echo=FALSE, fig.width=24, fig.height=15}
  station<-"CW4859"
  station_df <-cwoparchive %>%
  filter(stationname==station,sunzenithangle<85.) %>%
  select(z,linterpreted,insol90,sunzenithangle,sunazimuthangle,tau90,occultingeqr) %>%
  collect() %>%
  data.frame ()
  p<-ggplot(station_df,aes(y=90-sunzenithangle,x=sunazimuthangle))
  q<-p+geom_point(aes(colour=tau90),size=3,alpha=1/8)+ylim(0,90)+ggtitle(station)+scale_colour_gradient(limits=c(0,4), low="white", high="black", space="Lab")
  q

```
```{r echo=FALSE, fig.width=24, fig.height=15}
  station<-"DW3740"
  station_df <-cwoparchive %>%
  filter(stationname==station,sunzenithangle<85.) %>%
  select(z,linterpreted,insol90,sunzenithangle,sunazimuthangle,tau90,occultingeqr) %>%
  collect() %>%
  data.frame ()
  p<-ggplot(station_df,aes(y=90-sunzenithangle,x=sunazimuthangle))
  q<-p+geom_point(aes(colour=tau90),size=3,alpha=1/8)+ylim(0,90)+ggtitle(station)+scale_colour_gradient(limits=c(0,4), low="white", high="black", space="Lab")
  q

```

***
```{r echo=FALSE, fig.width=24, fig.height=15}
  station<-"FSUMET"
  station_df <-cwoparchive %>%
  filter(stationname==station,sunzenithangle<85.) %>%
  select(z,linterpreted,insol90,sunzenithangle,sunazimuthangle,tau90,occultingeqr) %>%
  collect() %>%
  data.frame ()
  p<-ggplot(station_df,aes(y=90-sunzenithangle,x=sunazimuthangle))
  q<-p+geom_point(aes(colour=tau90),size=3,alpha=1/8)+ylim(0,90)+ggtitle(station)+scale_colour_gradient(limits=c(0,4), low="white", high="black", space="Lab")
  q

```
```{r echo=FALSE, fig.width=24, fig.height=15}
  station<-"OH6GKW"
  station_df <-cwoparchive %>%
  filter(stationname==station,sunzenithangle<85.) %>%
  select(z,linterpreted,insol90,sunzenithangle,sunazimuthangle,tau90,occultingeqr) %>%
  collect() %>%
  data.frame ()
  p<-ggplot(station_df,aes(y=90-sunzenithangle,x=sunazimuthangle))
  q<-p+geom_point(aes(colour=tau90),size=3,alpha=1/8)+ylim(0,90)+ggtitle(station)+scale_colour_gradient(limits=c(0,4), low="white", high="black", space="Lab")
  q

```

histogram of attenuation
=================================
````{r echo=FALSE, fig.width=24, fig.height=15}
histodata <- millionpoints %>%
select (tau90) %>%
filter(sunzenithangle<90) %>%
collect() %>%
data.frame()
p<-ggplot(histodata,aes(tau90))
p+geom_histogram(binwidth=.01)+ggtitle("a million random points")+xlim(-1,4)+xlab("attenuation in bins by .01")
```


known limitations of the parsed data
====================================
- - Metadata sometimes has typos.  **Errors most affect tropics.**
- Two different sampling strategies are in use.  **Effect on stats.**   
- Archive intervals are not reported.  **Would affect glinting stats.**   
- Sensors may tilt.  **Overbright nearer meridian - noon and winter?**      
- Protocol for reporting L>999 is used inconsistently.  **Midsummer.**      
- L values above 2000 are outside the range of most stations.  **Midsummer glinting.**       



project: can there be a planetary ring
==============================
WHAT TO LOOK FOR:|    
-------|--------
equatorial orientation is usual |     
therefore annual cycle  |   
usually densest around 1.5-3 R(planet)  |       
fuzzy structure for a rocky planet   |   
composed of typical aeolian sediments |   

REASONS TO NOT DO THIS: |    
-------|--------
**a ring would decay very rapidly**  |   
**only the moon could make it persistent**  |       
**but moon was long thought dead**  | 


***
<iframe  title="ring shades winter only" width="420" height="350" src="http://www.youtube.com/v/TQisD91tGo4?html5=1" frameborder="0" allowfullscreen></iframe>


shading by a ring system? #1
==================================
**Requires a component of attenuation not dependent on airmass.**    
Recall for clear skies, the Beer-Lambert attenuation law:   
     
$\tau=e^{-m(\tau_a + \tau_g + \tau_s)}$  
    
where all attenuation terms are proportional to airmass m:  aerosols, gases, Raman and Rayleigh scattering.  

We require the existence of some attenuation that isn't dependent on m - for example, independent of zenith angle, or with a different dependence.


attenuation as function of zenith angle 
=================================
```{r echo=FALSE, fig.width=24, fig.height=15}
histodata <- tenmillionpoints %>%
filter(sunzenithangle<22.5) %>%
select (tau90) %>%
collect() %>%
data.frame()
p<-ggplot(histodata,aes(tau90))
p+geom_histogram(binwidth=.01)+xlim(-1,4)+xlab("attenuation in bins by .01")+annotate("text", x = 2, y = 2500, label = "Within fifteen degrees of zenith")+annotate("rect",xmin=0,xmax=.2,ymin=0,ymax=15000,alpha=.2)
```
```{r echo=FALSE, fig.width=24, fig.height=15}
histodata <- tenmillionpoints %>%
filter(sunzenithangle>45,sunzenithangle<67.5) %>%
select (tau90) %>%
collect() %>%
data.frame()
p<-ggplot(histodata,aes(tau90))
p+geom_histogram(binwidth=.01)+xlim(-1,4)+xlab("attenuation in bins by .01")+annotate("text", x = 2, y = 2500, label = "From 30 to 45 degrees from zenith")+annotate("rect",xmin=0,xmax=.2,ymin=0,ymax=67000,alpha=.2)
```
***
```{r echo=FALSE, fig.width=24, fig.height=15}
histodata <- tenmillionpoints %>%
filter(sunzenithangle>22.5,sunzenithangle<45) %>%
select (tau90) %>%
collect() %>%
data.frame()
p<-ggplot(histodata,aes(tau90))
p+geom_histogram(binwidth=.01)+xlim(-1,4)+xlab("attenuation in bins by .01")+annotate("text", x = 2, y = 2500, label = "From 15 to 30 degrees from zenith")+annotate("rect",xmin=0,xmax=.2,ymin=0,ymax=67000,alpha=.2)
```
```{r echo=FALSE, fig.width=24, fig.height=15}
histodata <- tenmillionpoints %>%
filter(sunzenithangle<90,sunzenithangle>67.5) %>%
select (tau90) %>%
collect() %>%
data.frame()
p<-ggplot(histodata,aes(tau90))
p+geom_histogram(binwidth=.01)+xlim(-1,4)+xlab("attenuation in bins by .01")+annotate("text", x = 2, y = 13000, label = "Within fifteen degrees of horizon")+annotate("rect",xmin=0,xmax=.2,ymin=0,ymax=22000,alpha=.2)
```


shading by a ring system? #2
==================================

**Requires a component of attenuation that is cyclic.**   The annual cycle of shading that would result from an equatorial ring occulting the sun could be summarized thus:  An observation at given latitude and yearday is attenuated by material at radius (see annex for diagram):   
   
$R_\varnothing =sin(ZA) * \frac {R_\oplus }{sin (\delta)}$    
   
and the dependence on R is "consistent" (a) over time and (b) over all latitudes at given time.



attenuation as a function of attributed ring 
=========================================
```{r echo=FALSE}
boxdata <- cwoparchive %>%
filter(tau90>-0.5,0.5>tau90,175<sunazimuthangle,185>sunazimuthangle)%>%
select(tau90,occultingeqr,stationname,z,sunazimuthangle,sunzenithangle) %>%
collect()%>%
data.frame
qplot(occultingeqr,tau90,data=boxdata,geom="boxplot",group=round_any(occultingeqr,0.25,floor),xlim=c(10,25))

```
***   
  
- densest at about 16K km from center of Earth, about 2.5R(Earth), 
- $\tau_{ring_{edge-on}} \approx$ 0.1 (taken as the anomaly above average value of $\tau$),  
- $\tau_{ring} \approx$ 0.02 if the above is scaled by sin of ten degrees (i.e., half of 23.5).  


conclusion of project
===========================

**available data permit the interpretation Earth is shaded by ring in eq orientation**     
-deepening the dark and cold of winter     
-with a keyhole of brightness around  midwinter up to about 60N   
-depositing dust into the atmosphere as ring decayed - ultra cold, possibly charged, advecting anomalous angular momentum   
    
**and if ring is shown by further tests to exist and be persistent**     
-the Moon is replenishing it   
-the Moon is geologically active       
-Earth may lie in an accretion disk mediating Moon-Earth mass exchange    
-imposing on climate the period of precession of lunar nodes (18.6 years)
-sensitive to solar wind



In closing...
====================================
    
The CWOP Solar Radiation database is publicly available   
-in raw form    
-in parsed form

Enjoy the new opportunities it provides - 

Thank you for your attention.


acknowledgments
=======================================================
CWOP Volunteers
    
Steve Dimse, Philip Gladstone,Ted Lum, Davis Instruments, Weather Display
   
Postgres community, 
Aginity, 
R Community, RStudio Community,  
Javier Corripio (insol), 
Hadley Wickham (ggplot, dplyr, stringr, inter alia), 
Coursera and JHU, 
Celestia Community, 
Amazon Web Services, Lewis Aslett for AMI,
Stack Overflow community

links
====================
- CWOP http://wxqa.com
- CWOP solar radiation archive: http://wxqa.com/lum_search.htm        
- parsing routine:  www.github.com/lohancock/solardataparser     
- markdown for this presentation:  www.github.com/lohancock/ams2016     
- clone the database of parsed solar radiation data:  em to either author (russ4cwop@gmail.com,lohancock@aol.com)

annex:  variables in the archive
=====================================
each observation comprises 34 variables including:
**parsed data: 23 variables**
original report, station name, archive date, date/time as extracted from report, dateflag to highlight nominal dates out of range, calculated date and time z, latitude, N/S, longitude, E/W, wind direction, wind speed, wind gust, temperature (F), rain this hour, rain last 24 hours, rain today, relative humidity, barometric pressure,  solar radiation measurement as given in report, solar radiation as interpreted, flag for number of characters in report, tech suffix providing some description of hardware and software
**from model: 8 variables**
julian day,sun azimuth angle, sun zenith angle, modeled solar insolation, diffuse component of modeled insolation, day length, solar declination, equation of time
**from lookup:**  station height
**computed** attenuation
**computed**  occultingeqr

annex:  details of clear sky model
=============================

Used insol routine by Javier Corripio   
https://cran.r-project.org/web/packages/insol/insol.pdf   

Used latitude, longitude, z and relative humidity supplied in observations   
Used temp(F) supplied in reports, converted to tempK   
Used height looked up at gpsvisualizer.com   
Applied to all calculations:  visibility = 90 km, albedo 0.5, ozone=.02

```{r echo=FALSE, eval=FALSE}

# ANNEX A

# (1) This presentation draws on an Amazon Redshift database populated with one table, cwoparchive. 
# (2) The Redshift database was initialized with a blank table using DDL below entitled "THE DDL."
# (3) Raw data was obtained from the CWOP Solar Radiation Data Archive, linked at:  http://wxqa.com/lum_search.htm.
# (4) These daily archives were parsed, see https://github.com/lohancock/solar-data-parser. 
# (5) Resulting files were uploaded from hard drive to an S3 bucket entitled cwop/lpic.
# (6) and from there to the prepared Redshift table - see "SQL FOR THE UPLOAD" for one day's example.

# "THE DDL"

select CREATE TABLE public.cwoparchive
(
  report VARCHAR(250) NOT NULL ENCODE lzo,
  stationname VARCHAR(20) ENCODE lzo,
	archivedate DATE NOT NULL ENCODE runlength,
	datatimes VARCHAR(10) ENCODE lzo,
	dateflag SMALLINT ENCODE runlength,
	z TIMESTAMP,
	latitude REAL ENCODE runlength,
	latsign CHAR(1),
	longitude REAL ENCODE runlength,
	lonsign CHAR(1),
	winddir REAL ENCODE bytedict,
	windknots REAL ENCODE bytedict,
	gust REAL ENCODE bytedict,
	tempk REAL ENCODE bytedict,
	rainfallhour REAL ENCODE runlength,
	rainfall24h REAL ENCODE runlength,
	rainfalltoday REAL ENCODE runlength,
	relativehumidity REAL ENCODE bytedict,
	baropressure REAL ENCODE bytedict,
	lrecord VARCHAR(20) ENCODE lzo,
	linterpreted INTEGER ENCODE delta,
	lcharerr BOOLEAN,
	tech VARCHAR(250) ENCODE lzo,
	jd REAL ENCODE runlength,
	sunazimuthangle REAL,
	sunzenithangle REAL,
	insol90 REAL,
	tau90 REAL,
	diffuse90 REAL,
	daylength REAL ENCODE runlength,
	solardec REAL ENCODE bytedict,
	eqtime REAL ENCODE bytedict,
	occultingeqr REAL,
	hite REAL ENCODE runlength
)
DISTSTYLE EVEN;

ALTER TABLE public.cwoparchive
ADD CONSTRAINT cwoparchive_pkey
PRIMARY KEY (report, archivedate);


# "SQL FOR THE UPLOAD" - Here is an example - data from May 18, 2010.
COPY cwoparchive FROM 's3://cwop/lpic/LPIC20100518.txt' CREDENTIALS 'aws_access_key_id=myaccesskey;aws_secret_access_key=mysecretaccesskey' NULL 'NA' DELIMITER '\t' ACCEPTINVCHARS AS '^';

# The upload is then undertaken for all other dates.

```


annex:  geometry of occulting ring
============
      
$$R_\varnothing =sin(ZA) * \frac {R_\oplus }{sin (\delta)}$$

where  
      
  $R_\varnothing \equiv$ radius of ring;  
  $R_\oplus \equiv$ radius of Earth;   
  ZA $\equiv$ zenith angle of sun;   
  $\delta \equiv$ solar declination angle.   



===========================
![derivation of r diagram](sinlaw.png)

